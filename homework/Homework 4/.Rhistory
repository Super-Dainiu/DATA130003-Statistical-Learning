for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
points<-((u1<1)+(u2<1))/2
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta))
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(points,((u1<1)+(u2<1))/2)
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (abs(Pi-pi)<1e-3) break
}
print(n)
N<-c(N,n)
}
colnames(N)<-paste('d=',dim,sep='')
N
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
points<-c(((u1<1)+(u2<1))/2)
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta))
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(points,((u1<1)+(u2<1))/2)
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (abs(Pi-pi)<1e-3) break
}
print(n)
N<-c(N,n)
}
colnames(N)<-paste('d=',dim,sep='')
N
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(((u1<1)+(u2<1))/2)
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta))
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(points,((u1<1)+(u2<1))/2)
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (abs(Pi-pi)<1e-3) break
}
print(n)
N<-c(N,n)
}
colnames(N)<-paste('d=',dim,sep='')
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(((u1<1)+(u2<1))/2)
print(points)
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta))
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(points,((u1<1)+(u2<1))/2)
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (abs(Pi-pi)<1e-3) break
}
print(n)
N<-c(N,n)
}
colnames(N)<-paste('d=',dim,sep='')
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(((u1<1)+(u2<1))/2)
print(points)
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta))
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(points,((u1<1)+(u2<1))/2)
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (abs(Pi-pi)<1e-3) break
}
print(n)
N<-c(N,n)
}
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(((u1<1)+(u2<1))/2)
print(points)
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(points,((u1<1)+(u2<1))/2)
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (abs(Pi-pi)<1e-3) break
}
print(n)
N<-c(N,n)
}
colnames(N)<-paste('d=',dim,sep='')
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(((u1<1)+(u2<1))/2)
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(points,((u1<1)+(u2<1))/2)
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (abs(Pi-pi)<1e-3) break
}
print(n)
N<-c(N,n)
}
colnames(N)<-paste('d=',dim,sep='')
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(((u1<1)+(u2<1))/2)
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(points,((u1<1)+(u2<1))/2)
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (abs(Pi-pi)<1e-3) break
}
print(n)
N<-c(N,n)
}
colnames(N)<-paste('d=',dim,sep='')
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(((u1<1)+(u2<1))/2)
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
u2<-apply(x,1,function(z) sqrt(sum((1-z)^2)))
points<-c(points,((u1<1)+(u2<1))/2)
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
print(Pi)
if (abs(Pi-pi)<1e-3) break
}
print(n)
N<-c(N,n)
}
colnames(N)<-paste('d=',dim,sep='')
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c((u1<1))
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c(points,(u1<1))
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
print(Pi)
if (abs(Pi-pi)<1e-3) break
}
print(n)
N<-c(N,n)
}
colnames(N)<-paste('d=',dim,sep='')
N
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c(points,(u1<1))
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
print(Pi)
if (abs(Pi-pi)<1e-3) break
}
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c((u1<1))
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c(points,(u1<1))
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (abs(Pi-pi)<1e-3) break
}
print(n)
N<-c(N,n)
}
colnames(N)<-paste('d=',dim,sep='')
N
names(N)<-paste('d=',dim,sep='')
N
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c((u1<1))
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c(points,(u1<1))
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (abs(Pi-pi)<1e-3) break
}
N<-c(N,n)
}
names(N)<-paste('d=',dim,sep='')
N
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c((u1<1))
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c(points,(u1<1))
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (var(points)<1e-3) break
}
N<-c(N,n)
}
names(N)<-paste('d=',dim,sep='')
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-1
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c((u1<1))
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c(points,(u1<1))
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (var(points)<1e-3) break
}
N<-c(N,n)
print(Pi)
}
names(N)<-paste('d=',dim,sep='')
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-100
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c((u1<1))
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c(points,(u1<1))
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (var(points)<1e-3) break
}
N<-c(N,n)
print(Pi)
}
names(N)<-paste('d=',dim,sep='')
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-100
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c((u1<1))
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c(points,(u1<1))
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (var(points)<1e-3) break
}
N<-c(N,n)
print(Pi)
}
names(N)<-paste('d=',dim,sep='')
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-10000
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c((u1<1))
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c(points,(u1<1))
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (var(points)<1e-3) break
}
N<-c(N,n)
print(Pi)
}
names(N)<-paste('d=',dim,sep='')
Pi
set.seed(123)
N<-c()
r<-1
dim<-2:10
for (d in dim){
n<-1
delta<-10000
x<-matrix(runif(d*n),nrow=n)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c((u1<1))
while (1){
n<-n+delta
x<-matrix(runif(d*delta),nrow=delta)
u1<-apply(x,1,function(z) sqrt(sum(z^2)))
points<-c(points,(u1<1))
volume<-mean(points)/(r/2)^d
Pi=(volume*gamma(d/2+1))^(2/d)/r
if (var(points)<1e-3) break
}
N<-c(N,n)
Pi
}
names(N)<-paste('d=',dim,sep='')
Pi
var(points)
1-pnorm(8/3)
pnorm(8/3)-pnorm(4/3)
pnorm(3/10)-pnorm(-2/3)
10.2/7.2
1-pnorm(1)
1-pnorm(14/9)
pnorm(23/18)
pnorm(-23/18)
combn(100,1)
combn(100,100)
combn(100,5)
combin<-function(n,k){}
combin<-function(n,k){
return(factorial(n)/factorial(k)/factorial(n-k))
}
for i in 1:24{}
sum<-0
for (i in 1:24){
sum<-sum+combin(100,i)*0.2^i*0.8^(100-i)
}
sum
1-sum
sum<-0
for (i in 1:14){
sum<-sum+combin(100,i)*0.2^i*0.8^(100-i)
}
sum
10.2/7.2
14/9
pnorm(1)
pnorm(0.3)-pnorm(-2/3)
pnorm(3/5)-pnorm(-2/3)
1-pnorm(17/12)
pnorm(-98/71)
pnorm(-98/72)
1-pnorm(13/18)
1-pnorm(5/4)
pnorm(-3/2)
train.raw<-read.csv("data/sampledata.csv")
model<-glm(data=train.scaled,churn~tenure+expense+degree+tightness+entropy+chgexpense+chgdegree,family=binomial(link='logit'))
setwd('C:/Users/honne/Desktop/Files/DATA130003-Statistical Learning/Homework 4/')
train.raw<-read.csv("data/sampledata.csv")
train.scaled<-data.frame(scale(subset(train.raw,select=-c(ID,churn))),churn=train.raw$churn)
model<-glm(data=train.scaled,churn~tenure+expense+degree+tightness+entropy+chgexpense+chgdegree,family=binomial(link='logit'))
summary(model)
predict(model,train.scaled)
predict(model,train.raw,scale=True)
predict.glm(model,train.raw,scale=True)
predict.glm(model,train.scale,scale=True)
predict.glm(model,train.scaled,scale=True)
predict.glm(model,train.scaled,"response")
model<-glm(churn~tenure+expense+degree+tightness+entropy+chgexpense+chgdegree,family=binomial(link='logit'),data=train.scaled,)
summary(model)
predict.glm(model,train.scaled,"response")
predict.glm(model,newdata=train.scaled,type="response")
head(train.pred)
train.pred=predict.glm(model,newdata=train.scaled,type="response")
head(train.pred)
head(test.pred)
test.raw<-read.csv('data/preddata.csv')
test.raw
test.pred<-predict(model,newdata=test.raw,scale=T,type='response')
head(test.pred)
sum(test.pred>0.0125)
sum(test.pred>0.00125)
sum(test.pred)
